{{- define "mychart.labels" }}
  labels:
    generator: helm
    date: {{ now | htmlDate }}
{{- end }}
apiVersion: v1
kind: ConfigMap
metadata: 
  name: {{ .Release.Name }}-configmap
  {{- template "mychart.labels"}}
data:
  myvalue: "Hello World"
  {{ $relname := .Release.Name}}
  {{- with .Values.favorite -}}
  drinkk: {{ .drink | default "tea" | quote | upper }}
  foodd: {{ .food | upper | quote }}
  # we can use dollar($) sign to assess parent scope object in scoped area
  realease: {{ $.Release.Name}}
  # we can assign parent scope object in a varible in use it in the scoped area.
  releasename: {{ $relname }}
  {{- end }}
  {{- if eq .Values.favorite.food "pizza" }}
  mug: "true"
  {{ end }}
  
  {{- if int .Values.val1 | lt  1 }}val: {{ .Values.val2 }} {{ end }}
  {{- if .Values.num }}
  num: {{ .Values.num }} 
  {{- end }}
  {{- if .Values.str }}
  str: {{ .Values.str }} 
  {{- end }}
  {{- if .Values.sites }}
{{ indent 2  "sites: true"}}
  {{- end }}
  toppings: |-
    {{- range .Values.pizzaToppings }}
    - {{ . | title | quote }}
    {{- end }}
  # range over slice and reading in variable
  toppings_new: |-
    {{- range $index, $topping := .Values.pizzaToppings }}
    {{ $index }}: {{ $topping }}
    {{- end }}
  sizes: |-
    {{- range tuple "small" "medium" "large"}}
    - {{ . }}
    {{- end }}
  # iteration over map  
  {{- range $key, $value := .Values.favorite }}
  {{ $key }}: {{ $value }}
  {{- end }}
